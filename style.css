/* Simple Reset */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    font-family: Arial, sans-serif;
    background: #f4f4f4;
    color: #333;
  }

  /* Header */
  .header {
    text-align: center;
    padding: 1rem;
    background: #333;
    color: #fff;
  }

  /***************************************************************
    CSS Grid with "grid-auto-rows" for a "2× vs. 1×" effect
  ***************************************************************/
  .gallery {
    display: grid;
    /* Each column is at least 250px wide, then auto-fill more columns if space. */
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));

    /* Each row is 200px tall by default (you can tweak). */
    grid-auto-rows: 200px;
    gap: 10px;
    padding: 10px;
    max-width: 1200px;
    margin: 0 auto;
  }

  /* The figure remains a grid item. We'll define "span" in .horizontal and .vertical */
  .gallery-item {
    position: relative;
  }

  /* Horizontal images (2:1) => occupy 1 row in height. */
  .gallery-item.horizontal {
    grid-row: span 1; /* 1 row => 200px tall, plus the gap. */
  }

  /* Vertical images (1:2) => occupy 2 rows => 400px tall. */
  .gallery-item.vertical {
    grid-row: span 2;
  }

  /* The images fill each figure, cropped to fit. */
  .gallery-item img {
    width: 100%;
    height: 100%;
    object-fit: cover; /* ensures it fills the figure bounding box */
    cursor: pointer;
    transition: transform 0.3s ease;
  }

  .gallery-item img:hover {
    transform: scale(1.05);
  }

  /***************************************************************
    Lightbox Overlay
  ***************************************************************/
  /* Lightbox overlay: full screen, centered content */
.overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.9);
    display: none; /* hidden by default */
    justify-content: center; /* center horizontally */
    align-items: center;     /* center vertically */
    z-index: 999;
  }

  /* The container holding the image + the info box side by side */
  .overlay-container {
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    gap: 2rem;

    /* Make sure the user can scroll if the image is larger than their viewport */
    max-width: 95vw;
    max-height: 95vh;
    overflow: auto;
    /* This ensures both items remain together but still can be scrolled in case they're too large */
  }

  /* The full-resolution image itself */
  .lightbox-img {
    display: block;
    /* No forced max-width here => actual size. If the image is huge, user can scroll. */
    /* If you prefer to scale it down to fit on screen with no scrolling, do:
       max-width: 60vw;
       max-height: 95vh;
       object-fit: contain;
       ... But then you won't see true 1:1 resolution on a typical screen. */
  }

  /* The like/comment area. We keep the background transparent for style. */
  .lightbox-info {
    color: #fff;
    /* Up to you to limit its width or let it expand. Example: */
    max-width: 300px;
  }

  /* Close button (positioned top-right) */
  .close {
    position: absolute;
    top: 30px;
    right: 30px;
    color: #fff;
    font-size: 3rem;
    font-weight: bold;
    cursor: pointer;
    transition: color 0.3s;
  }

  .close:hover {
    color: #f1c40f;
  }

  /* Mobile responsive: stack the image and comment box vertically if screen is narrow */
  @media (max-width: 768px) {
    .overlay-container {
      flex-direction: column;
      align-items: center;
    }
    /* Optionally scale down the image on mobile if you want:
       .lightbox-img {
         max-width: 90vw;
         max-height: 80vh;
       }
    */
  }


  /***************************************************************
    Likes & Comments
  ***************************************************************/
  .lightbox-info {
    color: #fff;
    max-width: 300px;
    width: 90%;
    margin: 0 auto;
    text-align: left;
  }

  .like-section {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-bottom: 1rem;
  }

  #like-btn {
    background: #f1c40f;
    border: none;
    padding: 0.5rem 1rem;
    cursor: pointer;
    font-weight: bold;
    border-radius: 4px;
    transition: background 0.3s;
  }

  #like-btn:hover {
    background: #d4ac0d;
  }

  .comments-section {
    margin-top: 1rem;
  }

  #comment-list {
    list-style: none;
    max-height: 150px;
    overflow-y: auto;
    margin-bottom: 0.5rem;
    padding: 0.5rem;
    border: 1px solid #ccc;
    background: #fff;
    color: #333;
  }

  #comment-list li {
    margin-bottom: 0.5rem;
    border-bottom: 1px solid #ccc;
    padding-bottom: 0.5rem;
  }

  #comment-input {
    width: 100%;
    resize: none;
    height: 60px;
    margin-bottom: 0.5rem;
  }

  #comment-submit-btn {
    background: #3498db;
    color: #fff;
    border: none;
    padding: 0.5rem 1rem;
    cursor: pointer;
    font-weight: bold;
    border-radius: 4px;
    transition: background 0.3s;
  }

  #comment-submit-btn:hover {
    background: #2d80b8;
  }
